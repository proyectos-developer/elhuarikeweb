{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nimport warning from './routerWarning';\nimport computeChangedRoutes from './computeChangedRoutes';\nimport getTransitionUtils from './TransitionUtils';\nimport _isActive from './isActive';\nimport getComponents from './getComponents';\nimport matchRoutes from './matchRoutes';\n\nfunction hasAnyProperties(object) {\n  for (var p in object) {\n    if (Object.prototype.hasOwnProperty.call(object, p)) return true;\n  }\n\n  return false;\n}\n\nexport default function createTransitionManager(history, routes) {\n  var state = {};\n\n  var _getTransitionUtils = getTransitionUtils(),\n      runEnterHooks = _getTransitionUtils.runEnterHooks,\n      runChangeHooks = _getTransitionUtils.runChangeHooks,\n      runLeaveHooks = _getTransitionUtils.runLeaveHooks; // Signature should be (location, indexOnly), but needs to support (path,\n  // query, indexOnly)\n\n\n  function isActive(location, indexOnly) {\n    location = history.createLocation(location);\n    return _isActive(location, indexOnly, state.location, state.routes, state.params);\n  }\n\n  var partialNextState = void 0;\n\n  function match(location, callback) {\n    if (partialNextState && partialNextState.location === location) {\n      // Continue from where we left off.\n      finishMatch(partialNextState, callback);\n    } else {\n      matchRoutes(routes, location, function (error, nextState) {\n        if (error) {\n          callback(error);\n        } else if (nextState) {\n          finishMatch(_extends({}, nextState, {\n            location: location\n          }), callback);\n        } else {\n          callback();\n        }\n      });\n    }\n  }\n\n  function finishMatch(nextState, callback) {\n    var _computeChangedRoutes = computeChangedRoutes(state, nextState),\n        leaveRoutes = _computeChangedRoutes.leaveRoutes,\n        changeRoutes = _computeChangedRoutes.changeRoutes,\n        enterRoutes = _computeChangedRoutes.enterRoutes;\n\n    runLeaveHooks(leaveRoutes, state); // Tear down confirmation hooks for left routes\n\n    leaveRoutes.filter(function (route) {\n      return enterRoutes.indexOf(route) === -1;\n    }).forEach(removeListenBeforeHooksForRoute); // change and enter hooks are run in series\n\n    runChangeHooks(changeRoutes, state, nextState, function (error, redirectInfo) {\n      if (error || redirectInfo) return handleErrorOrRedirect(error, redirectInfo);\n      runEnterHooks(enterRoutes, nextState, finishEnterHooks);\n    });\n\n    function finishEnterHooks(error, redirectInfo) {\n      if (error || redirectInfo) return handleErrorOrRedirect(error, redirectInfo); // TODO: Fetch components after state is updated.\n\n      getComponents(nextState, function (error, components) {\n        if (error) {\n          callback(error);\n        } else {\n          // TODO: Make match a pure function and have some other API\n          // for \"match and update state\".\n          callback(null, null, state = _extends({}, nextState, {\n            components: components\n          }));\n        }\n      });\n    }\n\n    function handleErrorOrRedirect(error, redirectInfo) {\n      if (error) callback(error);else callback(null, redirectInfo);\n    }\n  }\n\n  var RouteGuid = 1;\n\n  function getRouteID(route) {\n    var create = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    return route.__id__ || create && (route.__id__ = RouteGuid++);\n  }\n\n  var RouteHooks = Object.create(null);\n\n  function getRouteHooksForRoutes(routes) {\n    return routes.map(function (route) {\n      return RouteHooks[getRouteID(route)];\n    }).filter(function (hook) {\n      return hook;\n    });\n  }\n\n  function transitionHook(location, callback) {\n    matchRoutes(routes, location, function (error, nextState) {\n      if (nextState == null) {\n        // TODO: We didn't actually match anything, but hang\n        // onto error/nextState so we don't have to matchRoutes\n        // again in the listen callback.\n        callback();\n        return;\n      } // Cache some state here so we don't have to\n      // matchRoutes() again in the listen callback.\n\n\n      partialNextState = _extends({}, nextState, {\n        location: location\n      });\n      var hooks = getRouteHooksForRoutes(computeChangedRoutes(state, partialNextState).leaveRoutes);\n      var result = void 0;\n\n      for (var i = 0, len = hooks.length; result == null && i < len; ++i) {\n        // Passing the location arg here indicates to\n        // the user that this is a transition hook.\n        result = hooks[i](location);\n      }\n\n      callback(result);\n    });\n  }\n  /* istanbul ignore next: untestable with Karma */\n\n\n  function beforeUnloadHook() {\n    // Synchronously check to see if any route hooks want\n    // to prevent the current window/tab from closing.\n    if (state.routes) {\n      var hooks = getRouteHooksForRoutes(state.routes);\n      var message = void 0;\n\n      for (var i = 0, len = hooks.length; typeof message !== 'string' && i < len; ++i) {\n        // Passing no args indicates to the user that this is a\n        // beforeunload hook. We don't know the next location.\n        message = hooks[i]();\n      }\n\n      return message;\n    }\n  }\n\n  var unlistenBefore = void 0,\n      unlistenBeforeUnload = void 0;\n\n  function removeListenBeforeHooksForRoute(route) {\n    var routeID = getRouteID(route);\n\n    if (!routeID) {\n      return;\n    }\n\n    delete RouteHooks[routeID];\n\n    if (!hasAnyProperties(RouteHooks)) {\n      // teardown transition & beforeunload hooks\n      if (unlistenBefore) {\n        unlistenBefore();\n        unlistenBefore = null;\n      }\n\n      if (unlistenBeforeUnload) {\n        unlistenBeforeUnload();\n        unlistenBeforeUnload = null;\n      }\n    }\n  }\n  /**\n   * Registers the given hook function to run before leaving the given route.\n   *\n   * During a normal transition, the hook function receives the next location\n   * as its only argument and can return either a prompt message (string) to show the user,\n   * to make sure they want to leave the page; or `false`, to prevent the transition.\n   * Any other return value will have no effect.\n   *\n   * During the beforeunload event (in browsers) the hook receives no arguments.\n   * In this case it must return a prompt message to prevent the transition.\n   *\n   * Returns a function that may be used to unbind the listener.\n   */\n\n\n  function listenBeforeLeavingRoute(route, hook) {\n    var thereWereNoRouteHooks = !hasAnyProperties(RouteHooks);\n    var routeID = getRouteID(route, true);\n    RouteHooks[routeID] = hook;\n\n    if (thereWereNoRouteHooks) {\n      // setup transition & beforeunload hooks\n      unlistenBefore = history.listenBefore(transitionHook);\n      if (history.listenBeforeUnload) unlistenBeforeUnload = history.listenBeforeUnload(beforeUnloadHook);\n    }\n\n    return function () {\n      removeListenBeforeHooksForRoute(route);\n    };\n  }\n  /**\n   * This is the API for stateful environments. As the location\n   * changes, we update state and call the listener. We can also\n   * gracefully handle errors and redirects.\n   */\n\n\n  function listen(listener) {\n    function historyListener(location) {\n      if (state.location === location) {\n        listener(null, state);\n      } else {\n        match(location, function (error, redirectLocation, nextState) {\n          if (error) {\n            listener(error);\n          } else if (redirectLocation) {\n            history.replace(redirectLocation);\n          } else if (nextState) {\n            listener(null, nextState);\n          } else {\n            process.env.NODE_ENV !== 'production' ? warning(false, 'Location \"%s\" did not match any routes', location.pathname + location.search + location.hash) : void 0;\n          }\n        });\n      }\n    } // TODO: Only use a single history listener. Otherwise we'll end up with\n    // multiple concurrent calls to match.\n    // Set up the history listener first in case the initial match redirects.\n\n\n    var unsubscribe = history.listen(historyListener);\n\n    if (state.location) {\n      // Picking up on a matchContext.\n      listener(null, state);\n    } else {\n      historyListener(history.getCurrentLocation());\n    }\n\n    return unsubscribe;\n  }\n\n  return {\n    isActive: isActive,\n    match: match,\n    listenBeforeLeavingRoute: listenBeforeLeavingRoute,\n    listen: listen\n  };\n}","map":{"version":3,"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","warning","computeChangedRoutes","getTransitionUtils","_isActive","getComponents","matchRoutes","hasAnyProperties","object","p","createTransitionManager","history","routes","state","_getTransitionUtils","runEnterHooks","runChangeHooks","runLeaveHooks","isActive","location","indexOnly","createLocation","params","partialNextState","match","callback","finishMatch","error","nextState","_computeChangedRoutes","leaveRoutes","changeRoutes","enterRoutes","filter","route","indexOf","forEach","removeListenBeforeHooksForRoute","redirectInfo","handleErrorOrRedirect","finishEnterHooks","components","RouteGuid","getRouteID","create","undefined","__id__","RouteHooks","getRouteHooksForRoutes","map","hook","transitionHook","hooks","result","len","beforeUnloadHook","message","unlistenBefore","unlistenBeforeUnload","routeID","listenBeforeLeavingRoute","thereWereNoRouteHooks","listenBefore","listenBeforeUnload","listen","listener","historyListener","redirectLocation","replace","process","env","NODE_ENV","pathname","search","hash","unsubscribe","getCurrentLocation"],"sources":["C:/Users/jppor/OneDrive/Documents/Proyectos/2021/elhuarike/web-app/node_modules/react-router/es/createTransitionManager.js"],"sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nimport warning from './routerWarning';\nimport computeChangedRoutes from './computeChangedRoutes';\nimport getTransitionUtils from './TransitionUtils';\nimport _isActive from './isActive';\nimport getComponents from './getComponents';\nimport matchRoutes from './matchRoutes';\n\nfunction hasAnyProperties(object) {\n  for (var p in object) {\n    if (Object.prototype.hasOwnProperty.call(object, p)) return true;\n  }return false;\n}\n\nexport default function createTransitionManager(history, routes) {\n  var state = {};\n\n  var _getTransitionUtils = getTransitionUtils(),\n      runEnterHooks = _getTransitionUtils.runEnterHooks,\n      runChangeHooks = _getTransitionUtils.runChangeHooks,\n      runLeaveHooks = _getTransitionUtils.runLeaveHooks;\n\n  // Signature should be (location, indexOnly), but needs to support (path,\n  // query, indexOnly)\n\n\n  function isActive(location, indexOnly) {\n    location = history.createLocation(location);\n\n    return _isActive(location, indexOnly, state.location, state.routes, state.params);\n  }\n\n  var partialNextState = void 0;\n\n  function match(location, callback) {\n    if (partialNextState && partialNextState.location === location) {\n      // Continue from where we left off.\n      finishMatch(partialNextState, callback);\n    } else {\n      matchRoutes(routes, location, function (error, nextState) {\n        if (error) {\n          callback(error);\n        } else if (nextState) {\n          finishMatch(_extends({}, nextState, { location: location }), callback);\n        } else {\n          callback();\n        }\n      });\n    }\n  }\n\n  function finishMatch(nextState, callback) {\n    var _computeChangedRoutes = computeChangedRoutes(state, nextState),\n        leaveRoutes = _computeChangedRoutes.leaveRoutes,\n        changeRoutes = _computeChangedRoutes.changeRoutes,\n        enterRoutes = _computeChangedRoutes.enterRoutes;\n\n    runLeaveHooks(leaveRoutes, state);\n\n    // Tear down confirmation hooks for left routes\n    leaveRoutes.filter(function (route) {\n      return enterRoutes.indexOf(route) === -1;\n    }).forEach(removeListenBeforeHooksForRoute);\n\n    // change and enter hooks are run in series\n    runChangeHooks(changeRoutes, state, nextState, function (error, redirectInfo) {\n      if (error || redirectInfo) return handleErrorOrRedirect(error, redirectInfo);\n\n      runEnterHooks(enterRoutes, nextState, finishEnterHooks);\n    });\n\n    function finishEnterHooks(error, redirectInfo) {\n      if (error || redirectInfo) return handleErrorOrRedirect(error, redirectInfo);\n\n      // TODO: Fetch components after state is updated.\n      getComponents(nextState, function (error, components) {\n        if (error) {\n          callback(error);\n        } else {\n          // TODO: Make match a pure function and have some other API\n          // for \"match and update state\".\n          callback(null, null, state = _extends({}, nextState, { components: components }));\n        }\n      });\n    }\n\n    function handleErrorOrRedirect(error, redirectInfo) {\n      if (error) callback(error);else callback(null, redirectInfo);\n    }\n  }\n\n  var RouteGuid = 1;\n\n  function getRouteID(route) {\n    var create = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    return route.__id__ || create && (route.__id__ = RouteGuid++);\n  }\n\n  var RouteHooks = Object.create(null);\n\n  function getRouteHooksForRoutes(routes) {\n    return routes.map(function (route) {\n      return RouteHooks[getRouteID(route)];\n    }).filter(function (hook) {\n      return hook;\n    });\n  }\n\n  function transitionHook(location, callback) {\n    matchRoutes(routes, location, function (error, nextState) {\n      if (nextState == null) {\n        // TODO: We didn't actually match anything, but hang\n        // onto error/nextState so we don't have to matchRoutes\n        // again in the listen callback.\n        callback();\n        return;\n      }\n\n      // Cache some state here so we don't have to\n      // matchRoutes() again in the listen callback.\n      partialNextState = _extends({}, nextState, { location: location });\n\n      var hooks = getRouteHooksForRoutes(computeChangedRoutes(state, partialNextState).leaveRoutes);\n\n      var result = void 0;\n      for (var i = 0, len = hooks.length; result == null && i < len; ++i) {\n        // Passing the location arg here indicates to\n        // the user that this is a transition hook.\n        result = hooks[i](location);\n      }\n\n      callback(result);\n    });\n  }\n\n  /* istanbul ignore next: untestable with Karma */\n  function beforeUnloadHook() {\n    // Synchronously check to see if any route hooks want\n    // to prevent the current window/tab from closing.\n    if (state.routes) {\n      var hooks = getRouteHooksForRoutes(state.routes);\n\n      var message = void 0;\n      for (var i = 0, len = hooks.length; typeof message !== 'string' && i < len; ++i) {\n        // Passing no args indicates to the user that this is a\n        // beforeunload hook. We don't know the next location.\n        message = hooks[i]();\n      }\n\n      return message;\n    }\n  }\n\n  var unlistenBefore = void 0,\n      unlistenBeforeUnload = void 0;\n\n  function removeListenBeforeHooksForRoute(route) {\n    var routeID = getRouteID(route);\n    if (!routeID) {\n      return;\n    }\n\n    delete RouteHooks[routeID];\n\n    if (!hasAnyProperties(RouteHooks)) {\n      // teardown transition & beforeunload hooks\n      if (unlistenBefore) {\n        unlistenBefore();\n        unlistenBefore = null;\n      }\n\n      if (unlistenBeforeUnload) {\n        unlistenBeforeUnload();\n        unlistenBeforeUnload = null;\n      }\n    }\n  }\n\n  /**\n   * Registers the given hook function to run before leaving the given route.\n   *\n   * During a normal transition, the hook function receives the next location\n   * as its only argument and can return either a prompt message (string) to show the user,\n   * to make sure they want to leave the page; or `false`, to prevent the transition.\n   * Any other return value will have no effect.\n   *\n   * During the beforeunload event (in browsers) the hook receives no arguments.\n   * In this case it must return a prompt message to prevent the transition.\n   *\n   * Returns a function that may be used to unbind the listener.\n   */\n  function listenBeforeLeavingRoute(route, hook) {\n    var thereWereNoRouteHooks = !hasAnyProperties(RouteHooks);\n    var routeID = getRouteID(route, true);\n\n    RouteHooks[routeID] = hook;\n\n    if (thereWereNoRouteHooks) {\n      // setup transition & beforeunload hooks\n      unlistenBefore = history.listenBefore(transitionHook);\n\n      if (history.listenBeforeUnload) unlistenBeforeUnload = history.listenBeforeUnload(beforeUnloadHook);\n    }\n\n    return function () {\n      removeListenBeforeHooksForRoute(route);\n    };\n  }\n\n  /**\n   * This is the API for stateful environments. As the location\n   * changes, we update state and call the listener. We can also\n   * gracefully handle errors and redirects.\n   */\n  function listen(listener) {\n    function historyListener(location) {\n      if (state.location === location) {\n        listener(null, state);\n      } else {\n        match(location, function (error, redirectLocation, nextState) {\n          if (error) {\n            listener(error);\n          } else if (redirectLocation) {\n            history.replace(redirectLocation);\n          } else if (nextState) {\n            listener(null, nextState);\n          } else {\n            process.env.NODE_ENV !== 'production' ? warning(false, 'Location \"%s\" did not match any routes', location.pathname + location.search + location.hash) : void 0;\n          }\n        });\n      }\n    }\n\n    // TODO: Only use a single history listener. Otherwise we'll end up with\n    // multiple concurrent calls to match.\n\n    // Set up the history listener first in case the initial match redirects.\n    var unsubscribe = history.listen(historyListener);\n\n    if (state.location) {\n      // Picking up on a matchContext.\n      listener(null, state);\n    } else {\n      historyListener(history.getCurrentLocation());\n    }\n\n    return unsubscribe;\n  }\n\n  return {\n    isActive: isActive,\n    match: match,\n    listenBeforeLeavingRoute: listenBeforeLeavingRoute,\n    listen: listen\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}