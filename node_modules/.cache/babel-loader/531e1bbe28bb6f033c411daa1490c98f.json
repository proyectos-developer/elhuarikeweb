{"ast":null,"code":"import { getParamNames } from './PatternUtils';\n\nfunction routeParamsChanged(route, prevState, nextState) {\n  if (!route.path) return false;\n  var paramNames = getParamNames(route.path);\n  return paramNames.some(function (paramName) {\n    return prevState.params[paramName] !== nextState.params[paramName];\n  });\n}\n/**\n * Returns an object of { leaveRoutes, changeRoutes, enterRoutes } determined by\n * the change from prevState to nextState. We leave routes if either\n * 1) they are not in the next state or 2) they are in the next state\n * but their params have changed (i.e. /users/123 => /users/456).\n *\n * leaveRoutes are ordered starting at the leaf route of the tree\n * we're leaving up to the common parent route. enterRoutes are ordered\n * from the top of the tree we're entering down to the leaf route.\n *\n * changeRoutes are any routes that didn't leave or enter during\n * the transition.\n */\n\n\nfunction computeChangedRoutes(prevState, nextState) {\n  var prevRoutes = prevState && prevState.routes;\n  var nextRoutes = nextState.routes;\n  var leaveRoutes = void 0,\n      changeRoutes = void 0,\n      enterRoutes = void 0;\n\n  if (prevRoutes) {\n    var parentIsLeaving = false;\n    leaveRoutes = prevRoutes.filter(function (route) {\n      if (parentIsLeaving) {\n        return true;\n      } else {\n        var isLeaving = nextRoutes.indexOf(route) === -1 || routeParamsChanged(route, prevState, nextState);\n        if (isLeaving) parentIsLeaving = true;\n        return isLeaving;\n      }\n    }); // onLeave hooks start at the leaf route.\n\n    leaveRoutes.reverse();\n    enterRoutes = [];\n    changeRoutes = [];\n    nextRoutes.forEach(function (route) {\n      var isNew = prevRoutes.indexOf(route) === -1;\n      var paramsChanged = leaveRoutes.indexOf(route) !== -1;\n      if (isNew || paramsChanged) enterRoutes.push(route);else changeRoutes.push(route);\n    });\n  } else {\n    leaveRoutes = [];\n    changeRoutes = [];\n    enterRoutes = nextRoutes;\n  }\n\n  return {\n    leaveRoutes: leaveRoutes,\n    changeRoutes: changeRoutes,\n    enterRoutes: enterRoutes\n  };\n}\n\nexport default computeChangedRoutes;","map":{"version":3,"names":["getParamNames","routeParamsChanged","route","prevState","nextState","path","paramNames","some","paramName","params","computeChangedRoutes","prevRoutes","routes","nextRoutes","leaveRoutes","changeRoutes","enterRoutes","parentIsLeaving","filter","isLeaving","indexOf","reverse","forEach","isNew","paramsChanged","push"],"sources":["C:/Users/jppor/OneDrive/Documents/Proyectos/2021/elhuarike/web-app/node_modules/react-router/es/computeChangedRoutes.js"],"sourcesContent":["import { getParamNames } from './PatternUtils';\n\nfunction routeParamsChanged(route, prevState, nextState) {\n  if (!route.path) return false;\n\n  var paramNames = getParamNames(route.path);\n\n  return paramNames.some(function (paramName) {\n    return prevState.params[paramName] !== nextState.params[paramName];\n  });\n}\n\n/**\n * Returns an object of { leaveRoutes, changeRoutes, enterRoutes } determined by\n * the change from prevState to nextState. We leave routes if either\n * 1) they are not in the next state or 2) they are in the next state\n * but their params have changed (i.e. /users/123 => /users/456).\n *\n * leaveRoutes are ordered starting at the leaf route of the tree\n * we're leaving up to the common parent route. enterRoutes are ordered\n * from the top of the tree we're entering down to the leaf route.\n *\n * changeRoutes are any routes that didn't leave or enter during\n * the transition.\n */\nfunction computeChangedRoutes(prevState, nextState) {\n  var prevRoutes = prevState && prevState.routes;\n  var nextRoutes = nextState.routes;\n\n  var leaveRoutes = void 0,\n      changeRoutes = void 0,\n      enterRoutes = void 0;\n  if (prevRoutes) {\n    var parentIsLeaving = false;\n    leaveRoutes = prevRoutes.filter(function (route) {\n      if (parentIsLeaving) {\n        return true;\n      } else {\n        var isLeaving = nextRoutes.indexOf(route) === -1 || routeParamsChanged(route, prevState, nextState);\n        if (isLeaving) parentIsLeaving = true;\n        return isLeaving;\n      }\n    });\n\n    // onLeave hooks start at the leaf route.\n    leaveRoutes.reverse();\n\n    enterRoutes = [];\n    changeRoutes = [];\n\n    nextRoutes.forEach(function (route) {\n      var isNew = prevRoutes.indexOf(route) === -1;\n      var paramsChanged = leaveRoutes.indexOf(route) !== -1;\n\n      if (isNew || paramsChanged) enterRoutes.push(route);else changeRoutes.push(route);\n    });\n  } else {\n    leaveRoutes = [];\n    changeRoutes = [];\n    enterRoutes = nextRoutes;\n  }\n\n  return {\n    leaveRoutes: leaveRoutes,\n    changeRoutes: changeRoutes,\n    enterRoutes: enterRoutes\n  };\n}\n\nexport default computeChangedRoutes;"],"mappings":"AAAA,SAASA,aAAT,QAA8B,gBAA9B;;AAEA,SAASC,kBAAT,CAA4BC,KAA5B,EAAmCC,SAAnC,EAA8CC,SAA9C,EAAyD;EACvD,IAAI,CAACF,KAAK,CAACG,IAAX,EAAiB,OAAO,KAAP;EAEjB,IAAIC,UAAU,GAAGN,aAAa,CAACE,KAAK,CAACG,IAAP,CAA9B;EAEA,OAAOC,UAAU,CAACC,IAAX,CAAgB,UAAUC,SAAV,EAAqB;IAC1C,OAAOL,SAAS,CAACM,MAAV,CAAiBD,SAAjB,MAAgCJ,SAAS,CAACK,MAAV,CAAiBD,SAAjB,CAAvC;EACD,CAFM,CAAP;AAGD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,oBAAT,CAA8BP,SAA9B,EAAyCC,SAAzC,EAAoD;EAClD,IAAIO,UAAU,GAAGR,SAAS,IAAIA,SAAS,CAACS,MAAxC;EACA,IAAIC,UAAU,GAAGT,SAAS,CAACQ,MAA3B;EAEA,IAAIE,WAAW,GAAG,KAAK,CAAvB;EAAA,IACIC,YAAY,GAAG,KAAK,CADxB;EAAA,IAEIC,WAAW,GAAG,KAAK,CAFvB;;EAGA,IAAIL,UAAJ,EAAgB;IACd,IAAIM,eAAe,GAAG,KAAtB;IACAH,WAAW,GAAGH,UAAU,CAACO,MAAX,CAAkB,UAAUhB,KAAV,EAAiB;MAC/C,IAAIe,eAAJ,EAAqB;QACnB,OAAO,IAAP;MACD,CAFD,MAEO;QACL,IAAIE,SAAS,GAAGN,UAAU,CAACO,OAAX,CAAmBlB,KAAnB,MAA8B,CAAC,CAA/B,IAAoCD,kBAAkB,CAACC,KAAD,EAAQC,SAAR,EAAmBC,SAAnB,CAAtE;QACA,IAAIe,SAAJ,EAAeF,eAAe,GAAG,IAAlB;QACf,OAAOE,SAAP;MACD;IACF,CARa,CAAd,CAFc,CAYd;;IACAL,WAAW,CAACO,OAAZ;IAEAL,WAAW,GAAG,EAAd;IACAD,YAAY,GAAG,EAAf;IAEAF,UAAU,CAACS,OAAX,CAAmB,UAAUpB,KAAV,EAAiB;MAClC,IAAIqB,KAAK,GAAGZ,UAAU,CAACS,OAAX,CAAmBlB,KAAnB,MAA8B,CAAC,CAA3C;MACA,IAAIsB,aAAa,GAAGV,WAAW,CAACM,OAAZ,CAAoBlB,KAApB,MAA+B,CAAC,CAApD;MAEA,IAAIqB,KAAK,IAAIC,aAAb,EAA4BR,WAAW,CAACS,IAAZ,CAAiBvB,KAAjB,EAA5B,KAAyDa,YAAY,CAACU,IAAb,CAAkBvB,KAAlB;IAC1D,CALD;EAMD,CAxBD,MAwBO;IACLY,WAAW,GAAG,EAAd;IACAC,YAAY,GAAG,EAAf;IACAC,WAAW,GAAGH,UAAd;EACD;;EAED,OAAO;IACLC,WAAW,EAAEA,WADR;IAELC,YAAY,EAAEA,YAFT;IAGLC,WAAW,EAAEA;EAHR,CAAP;AAKD;;AAED,eAAeN,oBAAf"},"metadata":{},"sourceType":"module"}