{"ast":null,"code":"import { mapAsync } from './AsyncUtils';\nimport { isPromise } from './PromiseUtils';\n\nfunction getComponentsForRoute(nextState, route, callback) {\n  if (route.component || route.components) {\n    callback(null, route.component || route.components);\n    return;\n  }\n\n  var getComponent = route.getComponent || route.getComponents;\n\n  if (getComponent) {\n    var componentReturn = getComponent.call(route, nextState, callback);\n    if (isPromise(componentReturn)) componentReturn.then(function (component) {\n      return callback(null, component);\n    }, callback);\n  } else {\n    callback();\n  }\n}\n/**\n * Asynchronously fetches all components needed for the given router\n * state and calls callback(error, components) when finished.\n *\n * Note: This operation may finish synchronously if no routes have an\n * asynchronous getComponents method.\n */\n\n\nfunction getComponents(nextState, callback) {\n  mapAsync(nextState.routes, function (route, index, callback) {\n    getComponentsForRoute(nextState, route, callback);\n  }, callback);\n}\n\nexport default getComponents;","map":{"version":3,"names":["mapAsync","isPromise","getComponentsForRoute","nextState","route","callback","component","components","getComponent","getComponents","componentReturn","call","then","routes","index"],"sources":["C:/Users/jppor/OneDrive/Documents/Proyectos/2021/elhuarike/web-app/node_modules/react-router/es/getComponents.js"],"sourcesContent":["import { mapAsync } from './AsyncUtils';\nimport { isPromise } from './PromiseUtils';\n\nfunction getComponentsForRoute(nextState, route, callback) {\n  if (route.component || route.components) {\n    callback(null, route.component || route.components);\n    return;\n  }\n\n  var getComponent = route.getComponent || route.getComponents;\n  if (getComponent) {\n    var componentReturn = getComponent.call(route, nextState, callback);\n    if (isPromise(componentReturn)) componentReturn.then(function (component) {\n      return callback(null, component);\n    }, callback);\n  } else {\n    callback();\n  }\n}\n\n/**\n * Asynchronously fetches all components needed for the given router\n * state and calls callback(error, components) when finished.\n *\n * Note: This operation may finish synchronously if no routes have an\n * asynchronous getComponents method.\n */\nfunction getComponents(nextState, callback) {\n  mapAsync(nextState.routes, function (route, index, callback) {\n    getComponentsForRoute(nextState, route, callback);\n  }, callback);\n}\n\nexport default getComponents;"],"mappings":"AAAA,SAASA,QAAT,QAAyB,cAAzB;AACA,SAASC,SAAT,QAA0B,gBAA1B;;AAEA,SAASC,qBAAT,CAA+BC,SAA/B,EAA0CC,KAA1C,EAAiDC,QAAjD,EAA2D;EACzD,IAAID,KAAK,CAACE,SAAN,IAAmBF,KAAK,CAACG,UAA7B,EAAyC;IACvCF,QAAQ,CAAC,IAAD,EAAOD,KAAK,CAACE,SAAN,IAAmBF,KAAK,CAACG,UAAhC,CAAR;IACA;EACD;;EAED,IAAIC,YAAY,GAAGJ,KAAK,CAACI,YAAN,IAAsBJ,KAAK,CAACK,aAA/C;;EACA,IAAID,YAAJ,EAAkB;IAChB,IAAIE,eAAe,GAAGF,YAAY,CAACG,IAAb,CAAkBP,KAAlB,EAAyBD,SAAzB,EAAoCE,QAApC,CAAtB;IACA,IAAIJ,SAAS,CAACS,eAAD,CAAb,EAAgCA,eAAe,CAACE,IAAhB,CAAqB,UAAUN,SAAV,EAAqB;MACxE,OAAOD,QAAQ,CAAC,IAAD,EAAOC,SAAP,CAAf;IACD,CAF+B,EAE7BD,QAF6B;EAGjC,CALD,MAKO;IACLA,QAAQ;EACT;AACF;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASI,aAAT,CAAuBN,SAAvB,EAAkCE,QAAlC,EAA4C;EAC1CL,QAAQ,CAACG,SAAS,CAACU,MAAX,EAAmB,UAAUT,KAAV,EAAiBU,KAAjB,EAAwBT,QAAxB,EAAkC;IAC3DH,qBAAqB,CAACC,SAAD,EAAYC,KAAZ,EAAmBC,QAAnB,CAArB;EACD,CAFO,EAELA,QAFK,CAAR;AAGD;;AAED,eAAeI,aAAf"},"metadata":{},"sourceType":"module"}