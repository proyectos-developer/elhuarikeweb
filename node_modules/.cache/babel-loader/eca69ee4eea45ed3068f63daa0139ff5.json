{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\n\nvar loopAsync = exports.loopAsync = function loopAsync(turns, work, callback) {\n  var currentTurn = 0,\n      isDone = false;\n  var isSync = false,\n      hasNext = false,\n      doneArgs = void 0;\n\n  var done = function done() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    isDone = true;\n\n    if (isSync) {\n      // Iterate instead of recursing if possible.\n      doneArgs = args;\n      return;\n    }\n\n    callback.apply(undefined, args);\n  };\n\n  var next = function next() {\n    if (isDone) return;\n    hasNext = true;\n    if (isSync) return; // Iterate instead of recursing if possible.\n\n    isSync = true;\n\n    while (!isDone && currentTurn < turns && hasNext) {\n      hasNext = false;\n      work(currentTurn++, next, done);\n    }\n\n    isSync = false;\n\n    if (isDone) {\n      // This means the loop finished synchronously.\n      callback.apply(undefined, doneArgs);\n      return;\n    }\n\n    if (currentTurn >= turns && hasNext) {\n      isDone = true;\n      callback();\n    }\n  };\n\n  next();\n};","map":{"version":3,"names":["exports","__esModule","loopAsync","turns","work","callback","currentTurn","isDone","isSync","hasNext","doneArgs","done","_len","arguments","length","args","Array","_key","apply","undefined","next"],"sources":["C:/Users/jppor/OneDrive/Documents/Proyectos/2021/elhuarike/web-app/node_modules/history/lib/AsyncUtils.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nvar loopAsync = exports.loopAsync = function loopAsync(turns, work, callback) {\n  var currentTurn = 0,\n      isDone = false;\n  var isSync = false,\n      hasNext = false,\n      doneArgs = void 0;\n\n  var done = function done() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    isDone = true;\n\n    if (isSync) {\n      // Iterate instead of recursing if possible.\n      doneArgs = args;\n      return;\n    }\n\n    callback.apply(undefined, args);\n  };\n\n  var next = function next() {\n    if (isDone) return;\n\n    hasNext = true;\n\n    if (isSync) return; // Iterate instead of recursing if possible.\n\n    isSync = true;\n\n    while (!isDone && currentTurn < turns && hasNext) {\n      hasNext = false;\n      work(currentTurn++, next, done);\n    }\n\n    isSync = false;\n\n    if (isDone) {\n      // This means the loop finished synchronously.\n      callback.apply(undefined, doneArgs);\n      return;\n    }\n\n    if (currentTurn >= turns && hasNext) {\n      isDone = true;\n      callback();\n    }\n  };\n\n  next();\n};"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;;AACA,IAAIC,SAAS,GAAGF,OAAO,CAACE,SAAR,GAAoB,SAASA,SAAT,CAAmBC,KAAnB,EAA0BC,IAA1B,EAAgCC,QAAhC,EAA0C;EAC5E,IAAIC,WAAW,GAAG,CAAlB;EAAA,IACIC,MAAM,GAAG,KADb;EAEA,IAAIC,MAAM,GAAG,KAAb;EAAA,IACIC,OAAO,GAAG,KADd;EAAA,IAEIC,QAAQ,GAAG,KAAK,CAFpB;;EAIA,IAAIC,IAAI,GAAG,SAASA,IAAT,GAAgB;IACzB,KAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,IAAI,GAAGC,KAAK,CAACJ,IAAD,CAAzC,EAAiDK,IAAI,GAAG,CAA7D,EAAgEA,IAAI,GAAGL,IAAvE,EAA6EK,IAAI,EAAjF,EAAqF;MACnFF,IAAI,CAACE,IAAD,CAAJ,GAAaJ,SAAS,CAACI,IAAD,CAAtB;IACD;;IAEDV,MAAM,GAAG,IAAT;;IAEA,IAAIC,MAAJ,EAAY;MACV;MACAE,QAAQ,GAAGK,IAAX;MACA;IACD;;IAEDV,QAAQ,CAACa,KAAT,CAAeC,SAAf,EAA0BJ,IAA1B;EACD,CAdD;;EAgBA,IAAIK,IAAI,GAAG,SAASA,IAAT,GAAgB;IACzB,IAAIb,MAAJ,EAAY;IAEZE,OAAO,GAAG,IAAV;IAEA,IAAID,MAAJ,EAAY,OALa,CAKL;;IAEpBA,MAAM,GAAG,IAAT;;IAEA,OAAO,CAACD,MAAD,IAAWD,WAAW,GAAGH,KAAzB,IAAkCM,OAAzC,EAAkD;MAChDA,OAAO,GAAG,KAAV;MACAL,IAAI,CAACE,WAAW,EAAZ,EAAgBc,IAAhB,EAAsBT,IAAtB,CAAJ;IACD;;IAEDH,MAAM,GAAG,KAAT;;IAEA,IAAID,MAAJ,EAAY;MACV;MACAF,QAAQ,CAACa,KAAT,CAAeC,SAAf,EAA0BT,QAA1B;MACA;IACD;;IAED,IAAIJ,WAAW,IAAIH,KAAf,IAAwBM,OAA5B,EAAqC;MACnCF,MAAM,GAAG,IAAT;MACAF,QAAQ;IACT;EACF,CA1BD;;EA4BAe,IAAI;AACL,CApDD"},"metadata":{},"sourceType":"script"}